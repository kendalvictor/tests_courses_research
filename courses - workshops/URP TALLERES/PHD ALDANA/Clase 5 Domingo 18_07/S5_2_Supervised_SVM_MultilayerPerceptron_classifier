{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Supervised_SVM_MultilayerPerceptron_classifier","provenance":[{"file_id":"1dQnpcC9fiixL91d0R7A2W8VrvJi8F4XG","timestamp":1581717669912},{"file_id":"1LrvR1xRiTClJJuLIBi0473Ldb-SjDrYm","timestamp":1580439262955}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"_Ci7lS3T6U8a"},"source":["################################################################\n","#MultilayerPerceptron and SVM as classifier\n","#Author: Edwyn Javier Aldana\n","################################################################\n","\n","#Load libraries\n","from sklearn.datasets import make_classification\n","from matplotlib import pyplot as plt\n","from sklearn.neural_network import MLPClassifier\n","from sklearn import svm\n","import seaborn as seabornInstance\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import confusion_matrix\n","import pandas as pd\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"NmKqOsmb6guN"},"source":["Load Dataset"]},{"cell_type":"code","metadata":{"id":"qKks4rIl6mc-","colab":{"resources":{"http://localhost:8080/nbextensions/google.colab/files.js":{"data":"Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7CgpmdW5jdGlvbiBfdXBsb2FkRmlsZXMoaW5wdXRJZCwgb3V0cHV0SWQpIHsKICBjb25zdCBzdGVwcyA9IHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCk7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICAvLyBDYWNoZSBzdGVwcyBvbiB0aGUgb3V0cHV0RWxlbWVudCB0byBtYWtlIGl0IGF2YWlsYWJsZSBmb3IgdGhlIG5leHQgY2FsbAogIC8vIHRvIHVwbG9hZEZpbGVzQ29udGludWUgZnJvbSBQeXRob24uCiAgb3V0cHV0RWxlbWVudC5zdGVwcyA9IHN0ZXBzOwoKICByZXR1cm4gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpOwp9CgovLyBUaGlzIGlzIHJvdWdobHkgYW4gYXN5bmMgZ2VuZXJhdG9yIChub3Qgc3VwcG9ydGVkIGluIHRoZSBicm93c2VyIHlldCksCi8vIHdoZXJlIHRoZXJlIGFyZSBtdWx0aXBsZSBhc3luY2hyb25vdXMgc3RlcHMgYW5kIHRoZSBQeXRob24gc2lkZSBpcyBnb2luZwovLyB0byBwb2xsIGZvciBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcC4KLy8gVGhpcyB1c2VzIGEgUHJvbWlzZSB0byBibG9jayB0aGUgcHl0aG9uIHNpZGUgb24gY29tcGxldGlvbiBvZiBlYWNoIHN0ZXAsCi8vIHRoZW4gcGFzc2VzIHRoZSByZXN1bHQgb2YgdGhlIHByZXZpb3VzIHN0ZXAgYXMgdGhlIGlucHV0IHRvIHRoZSBuZXh0IHN0ZXAuCmZ1bmN0aW9uIF91cGxvYWRGaWxlc0NvbnRpbnVlKG91dHB1dElkKSB7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICBjb25zdCBzdGVwcyA9IG91dHB1dEVsZW1lbnQuc3RlcHM7CgogIGNvbnN0IG5leHQgPSBzdGVwcy5uZXh0KG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSk7CiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShuZXh0LnZhbHVlLnByb21pc2UpLnRoZW4oKHZhbHVlKSA9PiB7CiAgICAvLyBDYWNoZSB0aGUgbGFzdCBwcm9taXNlIHZhbHVlIHRvIG1ha2UgaXQgYXZhaWxhYmxlIHRvIHRoZSBuZXh0CiAgICAvLyBzdGVwIG9mIHRoZSBnZW5lcmF0b3IuCiAgICBvdXRwdXRFbGVtZW50Lmxhc3RQcm9taXNlVmFsdWUgPSB2YWx1ZTsKICAgIHJldHVybiBuZXh0LnZhbHVlLnJlc3BvbnNlOwogIH0pOwp9CgovKioKICogR2VuZXJhdG9yIGZ1bmN0aW9uIHdoaWNoIGlzIGNhbGxlZCBiZXR3ZWVuIGVhY2ggYXN5bmMgc3RlcCBvZiB0aGUgdXBsb2FkCiAqIHByb2Nlc3MuCiAqIEBwYXJhbSB7c3RyaW5nfSBpbnB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIGlucHV0IGZpbGUgcGlja2VyIGVsZW1lbnQuCiAqIEBwYXJhbSB7c3RyaW5nfSBvdXRwdXRJZCBFbGVtZW50IElEIG9mIHRoZSBvdXRwdXQgZGlzcGxheS4KICogQHJldHVybiB7IUl0ZXJhYmxlPCFPYmplY3Q+fSBJdGVyYWJsZSBvZiBuZXh0IHN0ZXBzLgogKi8KZnVuY3Rpb24qIHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IGlucHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlucHV0SWQpOwogIGlucHV0RWxlbWVudC5kaXNhYmxlZCA9IGZhbHNlOwoKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIG91dHB1dEVsZW1lbnQuaW5uZXJIVE1MID0gJyc7CgogIGNvbnN0IHBpY2tlZFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKSA9PiB7CiAgICAgIHJlc29sdmUoZS50YXJnZXQuZmlsZXMpOwogICAgfSk7CiAgfSk7CgogIGNvbnN0IGNhbmNlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpOwogIGlucHV0RWxlbWVudC5wYXJlbnRFbGVtZW50LmFwcGVuZENoaWxkKGNhbmNlbCk7CiAgY2FuY2VsLnRleHRDb250ZW50ID0gJ0NhbmNlbCB1cGxvYWQnOwogIGNvbnN0IGNhbmNlbFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgY2FuY2VsLm9uY2xpY2sgPSAoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9OwogIH0pOwoKICAvLyBXYWl0IGZvciB0aGUgdXNlciB0byBwaWNrIHRoZSBmaWxlcy4KICBjb25zdCBmaWxlcyA9IHlpZWxkIHsKICAgIHByb21pc2U6IFByb21pc2UucmFjZShbcGlja2VkUHJvbWlzZSwgY2FuY2VsUHJvbWlzZV0pLAogICAgcmVzcG9uc2U6IHsKICAgICAgYWN0aW9uOiAnc3RhcnRpbmcnLAogICAgfQogIH07CgogIGNhbmNlbC5yZW1vdmUoKTsKCiAgLy8gRGlzYWJsZSB0aGUgaW5wdXQgZWxlbWVudCBzaW5jZSBmdXJ0aGVyIHBpY2tzIGFyZSBub3QgYWxsb3dlZC4KICBpbnB1dEVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlOwoKICBpZiAoIWZpbGVzKSB7CiAgICByZXR1cm4gewogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgICAgfQogICAgfTsKICB9CgogIGZvciAoY29uc3QgZmlsZSBvZiBmaWxlcykgewogICAgY29uc3QgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpOwogICAgbGkuYXBwZW5kKHNwYW4oZmlsZS5uYW1lLCB7Zm9udFdlaWdodDogJ2JvbGQnfSkpOwogICAgbGkuYXBwZW5kKHNwYW4oCiAgICAgICAgYCgke2ZpbGUudHlwZSB8fCAnbi9hJ30pIC0gJHtmaWxlLnNpemV9IGJ5dGVzLCBgICsKICAgICAgICBgbGFzdCBtb2RpZmllZDogJHsKICAgICAgICAgICAgZmlsZS5sYXN0TW9kaWZpZWREYXRlID8gZmlsZS5sYXN0TW9kaWZpZWREYXRlLnRvTG9jYWxlRGF0ZVN0cmluZygpIDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ24vYSd9IC0gYCkpOwogICAgY29uc3QgcGVyY2VudCA9IHNwYW4oJzAlIGRvbmUnKTsKICAgIGxpLmFwcGVuZENoaWxkKHBlcmNlbnQpOwoKICAgIG91dHB1dEVsZW1lbnQuYXBwZW5kQ2hpbGQobGkpOwoKICAgIGNvbnN0IGZpbGVEYXRhUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgIHJlYWRlci5vbmxvYWQgPSAoZSkgPT4gewogICAgICAgIHJlc29sdmUoZS50YXJnZXQucmVzdWx0KTsKICAgICAgfTsKICAgICAgcmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKGZpbGUpOwogICAgfSk7CiAgICAvLyBXYWl0IGZvciB0aGUgZGF0YSB0byBiZSByZWFkeS4KICAgIGxldCBmaWxlRGF0YSA9IHlpZWxkIHsKICAgICAgcHJvbWlzZTogZmlsZURhdGFQcm9taXNlLAogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbnRpbnVlJywKICAgICAgfQogICAgfTsKCiAgICAvLyBVc2UgYSBjaHVua2VkIHNlbmRpbmcgdG8gYXZvaWQgbWVzc2FnZSBzaXplIGxpbWl0cy4gU2VlIGIvNjIxMTU2NjAuCiAgICBsZXQgcG9zaXRpb24gPSAwOwogICAgZG8gewogICAgICBjb25zdCBsZW5ndGggPSBNYXRoLm1pbihmaWxlRGF0YS5ieXRlTGVuZ3RoIC0gcG9zaXRpb24sIE1BWF9QQVlMT0FEX1NJWkUpOwogICAgICBjb25zdCBjaHVuayA9IG5ldyBVaW50OEFycmF5KGZpbGVEYXRhLCBwb3NpdGlvbiwgbGVuZ3RoKTsKICAgICAgcG9zaXRpb24gKz0gbGVuZ3RoOwoKICAgICAgY29uc3QgYmFzZTY0ID0gYnRvYShTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KG51bGwsIGNodW5rKSk7CiAgICAgIHlpZWxkIHsKICAgICAgICByZXNwb25zZTogewogICAgICAgICAgYWN0aW9uOiAnYXBwZW5kJywKICAgICAgICAgIGZpbGU6IGZpbGUubmFtZSwKICAgICAgICAgIGRhdGE6IGJhc2U2NCwKICAgICAgICB9LAogICAgICB9OwoKICAgICAgbGV0IHBlcmNlbnREb25lID0gZmlsZURhdGEuYnl0ZUxlbmd0aCA9PT0gMCA/CiAgICAgICAgICAxMDAgOgogICAgICAgICAgTWF0aC5yb3VuZCgocG9zaXRpb24gLyBmaWxlRGF0YS5ieXRlTGVuZ3RoKSAqIDEwMCk7CiAgICAgIHBlcmNlbnQudGV4dENvbnRlbnQgPSBgJHtwZXJjZW50RG9uZX0lIGRvbmVgOwoKICAgIH0gd2hpbGUgKHBvc2l0aW9uIDwgZmlsZURhdGEuYnl0ZUxlbmd0aCk7CiAgfQoKICAvLyBBbGwgZG9uZS4KICB5aWVsZCB7CiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICB9CiAgfTsKfQoKc2NvcGUuZ29vZ2xlID0gc2NvcGUuZ29vZ2xlIHx8IHt9OwpzY29wZS5nb29nbGUuY29sYWIgPSBzY29wZS5nb29nbGUuY29sYWIgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYi5fZmlsZXMgPSB7CiAgX3VwbG9hZEZpbGVzLAogIF91cGxvYWRGaWxlc0NvbnRpbnVlLAp9Owp9KShzZWxmKTsK","ok":true,"headers":[["content-type","application/javascript"]],"status":200,"status_text":""}},"base_uri":"https://localhost:8080/","height":275},"executionInfo":{"status":"ok","timestamp":1626630027084,"user_tz":300,"elapsed":6982,"user":{"displayName":"Edwyn Javier Aldana Bobadilla","photoUrl":"","userId":"02163041040238926784"}},"outputId":"2dd0c6ef-808a-4653-f0b3-fd7d64a0765a"},"source":["######################################################\n","#Uncomment the block online or local depending your\n","#execution environment\n","######################################################\n","#Online\n","from google.colab import files\n","uploaded = files.upload()\n","import io\n","dataset = pd.read_csv(io.BytesIO(uploaded['NonSeparable.csv']), sep=\"\\t\", header=None)\n","dataset.columns=['X1', 'X2', 'Class']\n","#Local\n","#dataset = pd.read_csv('../../data/NonSeparable.csv')\n","\n","#Describe shape of the dataset\n","print(dataset.shape)\n","#View some statistics\n","dataset.head()\n","\n"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/html":["\n","     <input type=\"file\" id=\"files-37e5696f-7ff5-4afb-9699-438e4bdc7432\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-37e5696f-7ff5-4afb-9699-438e4bdc7432\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script src=\"/nbextensions/google.colab/files.js\"></script> "],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["Saving NonSeparable.csv to NonSeparable.csv\n","(200, 3)\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>X1</th>\n","      <th>X2</th>\n","      <th>Class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.433138</td>\n","      <td>0.474119</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.569271</td>\n","      <td>0.516585</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.560099</td>\n","      <td>0.559882</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.530409</td>\n","      <td>0.516662</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.417098</td>\n","      <td>0.443887</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         X1        X2  Class\n","0  0.433138  0.474119      0\n","1  0.569271  0.516585      0\n","2  0.560099  0.559882      0\n","3  0.530409  0.516662      0\n","4  0.417098  0.443887      0"]},"metadata":{"tags":[]},"execution_count":3}]},{"cell_type":"markdown","metadata":{"id":"fvo21Ekds7Ln"},"source":["**Visualization**"]},{"cell_type":"code","metadata":{"id":"sroW-6sDARX2","colab":{"base_uri":"https://localhost:8080/","height":284},"executionInfo":{"status":"ok","timestamp":1626630033748,"user_tz":300,"elapsed":642,"user":{"displayName":"Edwyn Javier Aldana Bobadilla","photoUrl":"","userId":"02163041040238926784"}},"outputId":"3d7de739-453a-4363-cef2-d6b2bc05fd8c"},"source":["#Optional: Visualize data\n","import seaborn as sns; sns.set()\n","import matplotlib.pyplot as plt\n","ax = sns.scatterplot(x=\"X1\", y=\"X2\", data=dataset)"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"id":"KQspD25m7bVV"},"source":["Define predictors and response variables"]},{"cell_type":"code","metadata":{"id":"Txl02IEW7ae9","executionInfo":{"status":"ok","timestamp":1626631501388,"user_tz":300,"elapsed":313,"user":{"displayName":"Edwyn Javier Aldana Bobadilla","photoUrl":"","userId":"02163041040238926784"}}},"source":["#Define the predictor and the output variable.\n","#This task depends on several assumptions based on experience, for instance, \n","X = dataset.loc[:, 'X1':'X2'] \n","y = dataset.loc[:,'Class']\n"],"execution_count":41,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"94JJZNpt7olO"},"source":["Define training and test datasets"]},{"cell_type":"code","metadata":{"id":"KQjD_-i27tiw","executionInfo":{"status":"ok","timestamp":1626631503963,"user_tz":300,"elapsed":282,"user":{"displayName":"Edwyn Javier Aldana Bobadilla","photoUrl":"","userId":"02163041040238926784"}}},"source":["#Define the sizes of training set and test dataset, applying 80-20 criterion\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)\n","\n"],"execution_count":42,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"jGU0RH8K9H_Y"},"source":["Training Process"]},{"cell_type":"markdown","metadata":{"id":"9t0uLfgHtupb"},"source":["During trinig process of a NN, we have to decide on an **_optimizer_**. The optimizer is the algorithm which determines how much we move each weight down the slope we found by **backpropagation**. There are many possible choices, most of which are based on **Stochastic Gradient Descent**. [One of the most popular ones **right now is \"Adam**\"](https://machinelearningmastery.com/adam-optimization-algorithm-for-deep-learning/#:~:text=Adam%20is%20an%20optimization%20algorithm,iterative%20based%20in%20training%20data.&text=The%20algorithm%20is%20called%20Adam.), so that's the one we will use. The word \"stochastic\" means random process. **That is why neural networks don't always get the same results even if you train them twice on exactly the same data with the same parameters**. Making the process random makes it quicker, but less reliable. SGD and its child algorithms are a large part of the reason why training neural networks is now feasible.\n","\n","The __learning rate__ is the amount of space we expect to move down the slope on each cycle of learning. The larger this number, the more we move, but the less precise the movement.\n","\n"]},{"cell_type":"code","metadata":{"id":"YwvcUwus8-a-","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626631615152,"user_tz":300,"elapsed":346,"user":{"displayName":"Edwyn Javier Aldana Bobadilla","photoUrl":"","userId":"02163041040238926784"}},"outputId":"0ebebe73-af1a-4580-c482-269bcf3de32b"},"source":["#Train the model\n","#With MLP\n"," #‘lbfgs’ is an optimizer in the family of quasi-Newton methods (Limited-memory \n"," # BFGS (L-BFGS or LM-BFGS)).\n"," #‘SGD’ refers to stochastic gradient descent. (More efficient)\n"," #‘ADAM’ refers to a stochastic gradient-based optimizer proposed by Kingma, Diederik, and Jimmy Ba\n","\n","classifier = MLPClassifier(solver='lbfgs', learning_rate_init=0.01,\n","             hidden_layer_sizes=(10,3), random_state=1)\n","classifier.fit(X_train, y_train) #training the algorithm\n","\n","#(10,5)"],"execution_count":52,"outputs":[{"output_type":"execute_result","data":{"text/plain":["MLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,\n","              beta_2=0.999, early_stopping=False, epsilon=1e-08,\n","              hidden_layer_sizes=(10, 3), learning_rate='constant',\n","              learning_rate_init=0.01, max_fun=15000, max_iter=200,\n","              momentum=0.9, n_iter_no_change=10, nesterovs_momentum=True,\n","              power_t=0.5, random_state=1, shuffle=True, solver='lbfgs',\n","              tol=0.0001, validation_fraction=0.1, verbose=False,\n","              warm_start=False)"]},"metadata":{"tags":[]},"execution_count":52}]},{"cell_type":"markdown","metadata":{"id":"qsQnd-h89UtY"},"source":["Testing Process"]},{"cell_type":"code","metadata":{"id":"7XFNsxvV9euf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1626631631969,"user_tz":300,"elapsed":279,"user":{"displayName":"Edwyn Javier Aldana Bobadilla","photoUrl":"","userId":"02163041040238926784"}},"outputId":"72320235-c1f0-402e-f67c-fc818ce93586"},"source":["\n","#Make prediction based on the model using the test data\n","from sklearn.metrics import confusion_matrix\n","from sklearn import metrics\n","y_pred= classifier.predict(X_test)\n","cm = confusion_matrix(y_test, y_pred)\n","print(cm)\n","print(\"Accuracy MLPN:\",metrics.accuracy_score(y_test, y_pred))\n","\n","\n"],"execution_count":54,"outputs":[{"output_type":"stream","text":["[[16  2]\n"," [10 12]]\n","Accuracy MLPN: 0.7\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":284},"id":"EEA8U1VTwYX7","executionInfo":{"status":"ok","timestamp":1626631642258,"user_tz":300,"elapsed":820,"user":{"displayName":"Edwyn Javier Aldana Bobadilla","photoUrl":"","userId":"02163041040238926784"}},"outputId":"886235a2-5a34-4328-8592-f439372281af"},"source":["ax = sns.scatterplot(x=\"X1\", y=\"X2\", data=X_test, hue=y_pred)"],"execution_count":55,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"id":"vws-EJDKwskI"},"source":["**Is a Support Vector Machine better?**"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Z7Y49rngwjCx","executionInfo":{"status":"ok","timestamp":1626631647786,"user_tz":300,"elapsed":471,"user":{"displayName":"Edwyn Javier Aldana Bobadilla","photoUrl":"","userId":"02163041040238926784"}},"outputId":"5e984d99-9644-4c85-be2a-3e2c3b061548"},"source":["#With SVM\n","classifier2=svm.SVC(kernel='rbf')\n","classifier2.fit(X_train, y_train) #training the algorithm\n","\n","y_pred= classifier2.predict(X_test)\n","#y_pred.reshape(-1,1)\n","#y_pred\n","cm = confusion_matrix(y_test, y_pred)\n","print(cm)\n","print(\"SVM:\",metrics.accuracy_score(y_test, y_pred))"],"execution_count":56,"outputs":[{"output_type":"stream","text":["[[18  0]\n"," [ 3 19]]\n","SVM: 0.925\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":284},"id":"zDN-Wz5Zw0zr","executionInfo":{"status":"ok","timestamp":1626631203682,"user_tz":300,"elapsed":1411,"user":{"displayName":"Edwyn Javier Aldana Bobadilla","photoUrl":"","userId":"02163041040238926784"}},"outputId":"6929fb07-6b76-4bf8-beb5-a8a719bac04f"},"source":["ax = sns.scatterplot(x=\"X1\", y=\"X2\", data=X_test, hue=y_pred)"],"execution_count":24,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]}]}